(* 
	Sample program 
*)

program foo;
  type dd = real;
       ff = array[10][20] of dd;
       f = function(n, y, malaka, kitzi, malena: integer; x,v, halvas, gg, fordo: char) : dd;
  
  var n, limit, counter: integer;
      isPrime: boolean;

type
   intfunc = function(n: integer) : integer;
   string = array of char;

procedure eval(prompt: string; f: intfunc; val: integer);
begin
	writeString(prompt); 
	writeString('('); writeInteger(val); writeString(')=');
	writeInteger(f(val));
	writeString("\n")
end;
      
function fibonacci(n:integer) : integer;
var
	f0, f1, temp: integer;
begin
  f0 := 10;
	result := f0
end;
      
begin
    limit := readInteger();
    writeString("limit is: ");
    writeInteger(limit); writeString("errno is: ");
    writeInteger(errno);
  if errno = EINVAL then
    begin
      writeString("Error, wrong value");
      return
    end;
    
  limit := limit + (1 <> 2);
  limit := -limit + 10;
  limit := -(real)limit + 20;
  while limit>1 do
		begin
		  limit := limit + 1;
		  limit := limit * 2
		end;
		
	repeat
	  begin
	    limit := limit + 10
	  end
	 until limit > 10;
	n := -1;
	if n < 0 then
    limit := 1
  else if n > 0 then
    limit := 1
  else if n <> 0 then
    begin
      limit := limit * 10;
      limit := -limit
    end;
	 

  epic: 
    begin
      limit := 20;
      limit := -20;
      return
    end;  
	writeString("Hello world");
	writeString('\n')
end.
